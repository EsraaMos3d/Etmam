#pragma checksum "E:\Etmam\Project.Web\Pages\SearchTickets.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "0ff8366e6b592db53861b380bb60dc9b5997be5a"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(Project.Pages.Pages_SearchTickets), @"mvc.1.0.razor-page", @"/Pages/SearchTickets.cshtml")]
namespace Project.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "E:\Etmam\Project.Web\Pages\_ViewImports.cshtml"
using Microsoft.AspNetCore.Identity;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "E:\Etmam\Project.Web\Pages\_ViewImports.cshtml"
using Project;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "E:\Etmam\Project.Web\Pages\_ViewImports.cshtml"
using Project.Core.Helper;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "E:\Etmam\Project.Web\Pages\_ViewImports.cshtml"
using Resources.Resources.Views;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "E:\Etmam\Project.Web\Pages\_ViewImports.cshtml"
using Microsoft.AspNetCore.Mvc.Localization;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"0ff8366e6b592db53861b380bb60dc9b5997be5a", @"/Pages/SearchTickets.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"d58f8cf6d3680557ce1f661907716c2b07913a56", @"/Pages/_ViewImports.cshtml")]
    #nullable restore
    public class Pages_SearchTickets : global::Microsoft.AspNetCore.Mvc.RazorPages.Page
    #nullable disable
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 3 "E:\Etmam\Project.Web\Pages\SearchTickets.cshtml"
  
    ViewData["Title"] = "Search Tickets";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<div class=""row searchRow"">
    <div class=""col-12 col-sm-6"">
        <div class=""row"">
            <div class=""col-12 col-sm-6"">
                <div class=""form-group"">
                    <label>Created from</label>
                    <input class=""form-control"" type=""date"" id=""DateFrom"" />
                </div>
            </div>
            <div class=""col-12 col-sm-6"">
                <div class=""form-group"">
                    <label>To</label>
                    <input class=""form-control"" type=""date"" id=""DateTo"" />
                </div>
            </div>
        </div>
    </div>
    <div class=""col-12 col-sm-3"">
        <div class=""form-group"">
            <label>Ticket Status</label>
            ");
#nullable restore
#line 27 "E:\Etmam\Project.Web\Pages\SearchTickets.cshtml"
       Write(Html.DropDownList("TicketStatus_ID", ViewData["TicketStatus"] != null ? ViewData["TicketStatus"] as SelectList : new SelectList(Enumerable.Empty<SelectListItem>()), "select TicketStatus", new { @class = "form-control has-feedback-left", @id = "TicketStatus" }));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n\r\n");
            WriteLiteral(@"        </div>
    </div>
    <div class=""col-12 col-sm-3"">
        <div class=""form-group"">
            <button type=""submit"" class=""btn btn-primary mr-2"" onclick=""SearchFun()"">Search</button>
        </div>
    </div>
</div>

<div class=""row"">
    <div class=""col-lg-12 grid-margin stretch-card"">
        <div class=""card"">
            <div class=""card-body"">
                <h3 class=""card-title"">View Tickets</h3>

                <div class=""table-responsive"">
                    <table class=""table table-bordered"" id=""SearchTable"">
                        <thead>
                            <tr class=""table-info"">
                                <th>Ticket ID</th>
                                <th>Ticket Type</th>
                                <th>Ticket Status</th>
                                <th>Status Date</th>
                                <th>Created Date</th>
                                <th>Approved by</th>
                            </tr>
                    ");
            WriteLiteral("    </thead>\r\n                        <tbody>\r\n");
            WriteLiteral("                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</div>\r\n\r\n");
            DefineSection("Scripts", async() => {
                WriteLiteral(@"
    <script>
        function SearchFun() {
            $(""#SearchTable"").DataTable().ajax.reload();
        }
        $(function () {
          $('#SearchTable').DataTable({
            ""processing"": true,
            ""serverSide"": true,
            ""filter"": true,
            ""deferRender"": true,
            ""pageLength"": 10,
            ""paging"": true,
            dom: ""Blfrtip"",
            ""ordering"": false,
            ""lengthMenu"": [[10, 25, 50, 100, 150, 200], [10, 25, 50, 100, 150, 200]],
            buttons: [
                'copy', 'csv', 'excel', 'pdf', 'print'
            ],
            ""ajax"": {
                ""url"": ""/Home/TicketDataHelder"",
                ""type"": ""POST"",
                // ""datatype"": ""json"",
                ""data"": function (data) {
                    index = 0;
                    data.TicketStatus = $(""#TicketStatus"").val();
                    data.DateTo = $(""#DateTo"").val();
                    data.DateFrom = $(""#DateFrom"").val();
      ");
                WriteLiteral(@"              return data;
                },
            },
            ""columns"": [
                {
                    data: function (data, row, dataIndex) {
                        return ++index;
                    }
                },
                { ""data"": '");
#nullable restore
#line 141 "E:\Etmam\Project.Web\Pages\SearchTickets.cshtml"
                      Write(SessionHelper.IsArabic);

#line default
#line hidden
#nullable disable
                WriteLiteral("\' == \"True\" || \'");
#nullable restore
#line 141 "E:\Etmam\Project.Web\Pages\SearchTickets.cshtml"
                                                             Write(SessionHelper.IsArabic);

#line default
#line hidden
#nullable disable
                WriteLiteral("\' == true ? \"TicketTypeName_Ar\" : \"TicketTypeName_En\" },\r\n                {\r\n                    data: function (data, row) {\r\n                        var statusvalue = \'");
#nullable restore
#line 144 "E:\Etmam\Project.Web\Pages\SearchTickets.cshtml"
                                      Write(SessionHelper.IsArabic);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"' == true ? data.TicketStatusName_Ar : data.TicketStatusName_En;
                        var status = '';
                        if (data.FK_TicketStatus_Id == 1) {
                            status = '<label class=""badge badge-info"">' + statusvalue + '</label>';
                        }
                        else if (data.FK_TicketStatus_Id == 2) {
                            status = ' <label class=""badge badge-success"">' + statusvalue + '</label>';
                        }
                        else if (data.FK_TicketStatus_Id == 3 || data.FK_TicketStatus_Id == 4) {
                            status = ' <label class=""badge badge-danger"">' + statusvalue + '</label>';
                        }
                        return status;
                    }
                },
                {
                    data: function (data, row) {
                        return data.ModifiedOn ? data.ModifiedOn.toString(""MM/dd/yy"")  : '';
                    }
                },
           ");
                WriteLiteral(@"     {
                    data: function (data, row) {

                        return data.CreatedOn != null ? data.CreatedOn.toString(""MM/dd/yy"") : '';
                    }
                },
                { ""data"": ""ApprovedBy"" },
            ]
        });
    });
    </script>
");
            }
            );
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<Project.Web.Pages.SearchTicketsModel> Html { get; private set; } = default!;
        #nullable disable
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<Project.Web.Pages.SearchTicketsModel> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<Project.Web.Pages.SearchTicketsModel>)PageContext?.ViewData;
        public Project.Web.Pages.SearchTicketsModel Model => ViewData.Model;
    }
}
#pragma warning restore 1591
